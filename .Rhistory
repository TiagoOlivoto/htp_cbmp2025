as.data.frame() |>
ccc(maturity_ground, mat_vndvi) |>
mutate(rho = paste0("rho[c]:~", round(ccc, 4)),
rmse = paste0("RMSE:~", round(rmse, 4)),
r = paste0("r:~~~", round(r, 4)))
mat |>
ggplot(aes(maturity_ground, mat_vndvi)) +
geom_point(size = 3, alpha = 0.7, aes( color = diff_class)) +
scale_y_continuous(limits = c(110, 135)) +
scale_x_continuous(limits = c(110, 135)) +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm") +
labs(x = "Dias para maturação (observado)",
y = "Dias para maturação (predito)") +
coord_equal() +
theme_minimal(base_size = 20) +
geom_text(aes(label=rho),
x = 112,
y = 135,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=rmse),
x = 112,
y = 134,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=r),
x = 112,
y = 133,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE)
matplot <-
mat |>
ggplot(aes(maturity_ground, mat_vndvi)) +
geom_point(size = 3, alpha = 0.7, aes( color = diff_class)) +
scale_y_continuous(limits = c(110, 135)) +
scale_x_continuous(limits = c(110, 135)) +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm") +
labs(x = "Dias para maturação (observado)",
y = "Dias para maturação (predito)") +
coord_equal() +
theme_minimal(base_size = 20) +
geom_text(aes(label=rho),
x = 112,
y = 135,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=rmse),
x = 112,
y = 134,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=r),
x = 112,
y = 133,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE)
materr <-
mat |>
sf::st_drop_geometry() |>
as.data.frame() |>
group_by(diff_class) |>
summarise(n = n())
matplot + materr +
plot_layout(widths = c(0.8, 0.2))
library(patchwork)
matplot <-
mat |>
ggplot(aes(maturity_ground, mat_vndvi)) +
geom_point(size = 3, alpha = 0.7, aes( color = diff_class)) +
scale_y_continuous(limits = c(110, 135)) +
scale_x_continuous(limits = c(110, 135)) +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm") +
labs(x = "Dias para maturação (observado)",
y = "Dias para maturação (predito)") +
coord_equal() +
theme_minimal(base_size = 20) +
geom_text(aes(label=rho),
x = 112,
y = 135,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=rmse),
x = 112,
y = 134,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=r),
x = 112,
y = 133,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE)
materr <-
mat |>
sf::st_drop_geometry() |>
as.data.frame() |>
group_by(diff_class) |>
summarise(n = n())
materrp <-
ggplot(materr, aes("A", n, fill = diff_class)) +
geom_col() +
geom_text(aes(label = n), position = "stack",
vjust = 1) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = "Número de parcelas experimentais",
title = "Proporção do erro de predição",
fill = "abs(dias)")
matplot + materrp +
plot_layout(widths = c(0.8, 0.2))
View(mat)
P0232 <- mat |> filter(plot_id == "P0232")
P0144 <- mat |> filter(plot_id == "P0144")
pgood <- mosaic_crop(mosaic, P0232, buffer = 5)
View(P0232)
pgood <- mosaic_crop(mosaic, shapefile = P0232, buffer = 5)
pbad <- mosaic_crop(mosaic, shapefile = P0144, buffer = 5)
mosaic_plot_rgb(pgood)
shapefile_plot(pgood)
shapefile_plot(P0232, add = TRUE)
shapefile_plot(P0232, add = TRUE, col = "red")
mosaic_plot_rgb(pgood)
shapefile_plot(P0232, add = TRUE, border = "red")
shapefile_plot(P0232, add = TRUE, border = "red", lwd = 2)
shapefile_plot(P0232, add = TRUE, border = "red", lwd = 3)
pgood <- mosaic_crop(mosaic, shapefile = P0232, buffer = 2)
pbad <- mosaic_crop(mosaic, shapefile = P0144, buffer = 2)
mosaic_plot_rgb(pgood)
shapefile_plot(P0232, add = TRUE, border = "red", lwd = 3)
# Bad P0144
P0144 <- mat |> filter(plot_id == "P0144")
pbad <- mosaic_crop(mosaic, shapefile = P0144, buffer = 2)
mosaic_plot_rgb(pgood)
shapefile_plot(P0232, add = TRUE, border = "red", lwd = 3)
mosaic_plot_rgb(pbad)
shapefile_plot(P0144, add = TRUE, border = "red", lwd = 3)
# Bad P0144
P0144 <- mat |> filter(plot_id == "P0144")
pbad <- mosaic_crop(mosaic, shapefile = P0144, buffer = 2)
mosaic_plot_rgb(pbad)
shapefile_plot(P0144, add = TRUE, border = "red", lwd = 3)
bm + shapefile_view(mat, attribute = "mat_vndvi")
bm <- mosaic_view(mosaic,
r = 1, g = 2, b = 3,
max_pixels = 5e6)
bm + shapefile_view(mat, attribute = "mat_vndvi")
bm + shapefile_view(mat |> sf::st_buffer(0.5), attribute = "mat_vndvi")
bm + shapefile_view(mat |> sf::st_buffer(0.3), attribute = "mat_vndvi")
bm + shapefile_view(mat |> sf::st_buffer(0.2), attribute = "mat_vndvi")
mat |> sf::st_buffer(0.22) |> shapefile_export("shape_mat.rds")
mat
library(pliman)
library(tidyverse)
mosaic <- mosaic_input("maturity/cropped_09-17-2024.tif")
shapefile <- shapefile_input("maturity/shape_mat.rds")
ngrdi <-
rio::import("maturity/time_series_maturity_vndvi5.xlsx", setclass = "tbl") |>
select(block, plot_id, maturity) |>
rename(mat_vndvi = maturity)
shapefile
shapefile_export(shapefile |> sf::st_buffer(0.25), "shape_mat2.rds")
setwd("D:/htp_cbmp2025")
library(pliman)
library(tidyverse)
mosaic <- mosaic_input("maturity/cropped_09-17-2024.tif")
shapefile <- shapefile_input("maturity/shape_mat.rds")
shapefile_export(shapefile |> sf::st_buffer(0.25), "shape_mat2.rds")
ngrdi <-
rio::import("maturity/time_series_maturity_vndvi2.xlsx", setclass = "tbl") |>
select(block, plot_id, maturity) |>
rename(mat_vndvi = maturity)
rio::import("maturity/time_series_maturity_vndvi2.xlsx", setclass = "tbl")
ngrdi <-
rio::import("maturity/time_series_maturity_vndvi2.xlsx", setclass = "tbl") |>
select(block, plot_id, maturity) |>
rename(mat_vndvi = maturity)
mat <-
left_join(shapefile, ngrdi) |>
mutate(mat_vndvi = mat_vndvi,
diff = (mat_vndvi) - maturity_ground) |>
mutate(diff_class = case_when(
between(abs(diff), 0, 3) ~ "0 a 3",
between(abs(diff), 3, 6) ~ "3 a 6",
between(abs(diff), 6, 9) ~ "6 a 9",
FALSE ~ "> 9"
)) |>
drop_na()
dfccc <-
mat |>
sf::st_drop_geometry() |>
as.data.frame() |>
ccc(maturity_ground, mat_vndvi) |>
mutate(rho = paste0("rho[c]:~", round(ccc, 4)),
rmse = paste0("RMSE:~", round(rmse, 4)),
r = paste0("r:~~~", round(r, 4)))
matplot <-
mat |>
ggplot(aes(maturity_ground, mat_vndvi)) +
geom_point(size = 3, alpha = 0.7, aes( color = diff_class)) +
scale_y_continuous(limits = c(110, 135)) +
scale_x_continuous(limits = c(110, 135)) +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm") +
labs(x = "Dias para maturação (observado)",
y = "Dias para maturação (predito)") +
coord_equal() +
theme_minimal(base_size = 20) +
geom_text(aes(label=rho),
x = 112,
y = 135,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=rmse),
x = 112,
y = 134,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=r),
x = 112,
y = 133,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE)
materr <-
mat |>
sf::st_drop_geometry() |>
as.data.frame() |>
group_by(diff_class) |>
summarise(n = n())
materrp <-
ggplot(materr, aes("A", n, fill = diff_class)) +
geom_col() +
geom_text(aes(label = n), position = "stack",
vjust = 1) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = "Número de parcelas experimentais",
title = "Proporção do erro de predição",
fill = "abs(dias)")
matplot + materrp +
plot_layout(widths = c(0.8, 0.2))
matplot
ngrdi <-
rio::import("maturity/time_series_maturity_vndvi5.xlsx", setclass = "tbl") |>
select(block, plot_id, maturity) |>
rename(mat_vndvi = maturity)
mat <-
left_join(shapefile, ngrdi) |>
mutate(mat_vndvi = mat_vndvi,
diff = (mat_vndvi) - maturity_ground) |>
mutate(diff_class = case_when(
between(abs(diff), 0, 3) ~ "0 a 3",
between(abs(diff), 3, 6) ~ "3 a 6",
between(abs(diff), 6, 9) ~ "6 a 9",
FALSE ~ "> 9"
)) |>
drop_na()
dfccc <-
mat |>
sf::st_drop_geometry() |>
as.data.frame() |>
ccc(maturity_ground, mat_vndvi) |>
mutate(rho = paste0("rho[c]:~", round(ccc, 4)),
rmse = paste0("RMSE:~", round(rmse, 4)),
r = paste0("r:~~~", round(r, 4)))
matplot <-
mat |>
ggplot(aes(maturity_ground, mat_vndvi)) +
geom_point(size = 3, alpha = 0.7, aes( color = diff_class)) +
scale_y_continuous(limits = c(110, 135)) +
scale_x_continuous(limits = c(110, 135)) +
geom_abline(intercept = 0, slope = 1) +
geom_smooth(method = "lm") +
labs(x = "Dias para maturação (observado)",
y = "Dias para maturação (predito)") +
coord_equal() +
theme_minimal(base_size = 20) +
geom_text(aes(label=rho),
x = 112,
y = 135,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=rmse),
x = 112,
y = 134,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE) +
geom_text(aes(label=r),
x = 112,
y = 133,
hjust = 0,
size = 4,
data = dfccc[1, ],
parse = TRUE)
matplot
# fungi in petri dish
fungi <- image_import("fungi2.jpeg", plot = TRUE)
# fungi in petri dish
fungi <- image_import("fungi2.jpg", plot = TRUE)
analyze_objects(fungi,
index = "HUE",
filter = 5,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "HUE",
filter = 5,
watershed = FALSE,
invert = F) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter = 5,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter = 15,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter = 15,
dilate = 5,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
opening = 15,
dilate = 5,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
opening = 15,
# dilate = 5,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
opening = 15,
dilate = 10,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter  = 15,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
dilate = 5,
filter  = 15,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "B-R",
dilate = 5,
filter  = 15,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
image_index(fungi = "L")
image_index(fungi, "L")
image_index(fungi, "a*")
image_index(fungi, "a")
image_index(fungi, "b")
image_index(fungi, "L-a*")
image_index(fungi, "L - a")
image_index(fungi, "L")
image_index(fungi, "L - a")
image_index(fungi, "L* - a")
image_index(fungi, "R-B")
image_index(fungi, "L - (R-B)")
image_index(fungi, "L")
analyze_objects(fungi,
index = "L",
dilate = 5,
filter  = 15,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter  = 15,
watershed = FALSE,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter  = 15,
watershed = FALSE,
marker_size = 3,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
analyze_objects(fungi,
index = "L",
filter  = 15,
watershed = FALSE,
contour_size  = 3,
invert = TRUE) |>
get_measures(dpi = 90) |>
plot_measures(measure = "area",
col = "black",
size = 2)
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
# fungi in petri dish
fungi <- image_import("fungi.jpg", plot = TRUE)
quarto::quarto_render()
?quarto::quarto_render
quarto::quarto_render()
quarto::quarto_render()
#| warning: false
library(pliman)
library(tidyverse)
library(ggridges)
mo <- mosaic_input("wheat/wheat_ufv.tif")
mo <- mosaic_input("wheat/wheat_ufv.tif")
setwd("D:/htp_cbmp2025")
mo <- mosaic_input("wheat/wheat_ufv.tif")
list.files()
mo <- mosaic_input("wheat/wheat_ufv.tiff")
mosaic_plot_rgb(mo)
cr <- mosaic_crop(mo)
cr
mosaic_export(cr, "wheat/wheat_ufv2.tif")
